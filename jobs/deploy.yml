parameters:
  # unique name of the job
  job_name: deploy_sppkg
  # friendly name of the job
  display_name: Upload & deploy *.sppkg to SharePoint app catalog
  # agent pool details (default: MSFT hosted Ubuntu)
  pool:
    vmImage: ubuntu-latest
  # name of target enviroment deploying to
  target_environment: ''
  # m365 user credentials
  m365_user_login: ''
  m365_user_password: ''
  # app catalog url
  m365_app_catalog_site_url: ''
  # app catalog scope (tenant|sitecollection)
  m365cli_app_catalog_scope: ''
  # additional arguments to add to execution of m365cli
  m365cli_spoAppAdd_extra_arguments: ''
  m365cli_spoAppDeploy_extra_arguments: ''
  # node version
  node_version: '10.x'

jobs:
- deployment: ${{ parameters.job_name }}
  displayName: ${{ parameters.display_name }}
  pool: ${{ parameters.pool }}
  environment: ${{ parameters.target_environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        ##########################################
        ## specify which node version to use
        ##########################################
        - task: UseNode@1
          displayName: Set to Node.js ${{ parameters.node_version }}
          inputs:
            version: ${{ parameters.node_version }}
          condition: ne('${{ parameters.node_version }}', '')
        ##########################################
        ## install CLI for Microsoft 365
        ##########################################
        - script: sudo npm install --global @pnp/cli-microsoft365
          displayName: Install CLI for Microsoft 365
        ##########################################
        ## login to CLI for Microsoft 365
        ##########################################
        - script: m365 login --authType password --userName ${{ parameters.m365_user_login }} --password ${{ parameters.m365_user_password }}
          displayName: Sign into Microsoft 365
        ##########################################
        ## download previously built *.sppkg
        ##########################################
        - task: DownloadPipelineArtifact@2
          displayName: Download SharePoint package (*.sppkg)
          inputs:
            buildType: current
            artifactName: spfx-package
        ##########################################
        ## determine name of generated *.sppkg
        ##########################################
        - script: |
            CMD_GET_SPPKG_NAME=$(find $(Pipeline.Workspace)/spfx-package -name '*.sppkg' -exec basename {} \;)
            echo "##vso[task.setvariable variable=SpPkgFileName;isOutput=true]${CMD_GET_SPPKG_NAME}"
          displayName: Get generated *.sppkg filename
          name: GetSharePointPackage
        ##########################################
        ## upload *.sppkg to the target app catalog
        ##########################################
        - script: m365 spo app add --filePath "$(Pipeline.Workspace)/spfx-package/$(GetSharePointPackage.SpPkgFileName)" --appCatalogUrl ${{ parameters.m365_app_catalog_site_url }} --scope ${{ parameters.m365cli_app_catalog_scope }} --overwrite ${{ parameters.m365cli_spoAppAdd_extra_arguments }}
          displayName: Upload SharePoint package to Site Collection App Catalog
        ##########################################
        ##
        ##########################################
        - script: m365 spo app deploy --name $(GetSharePointPackage.SpPkgFileName) --appCatalogUrl ${{ parameters.m365_app_catalog_site_url }} --scope ${{ parameters.m365cli_app_catalog_scope }} ${{ parameters.m365cli_spoAppDeploy_extra_arguments }}
          displayName: Deploy SharePoint package